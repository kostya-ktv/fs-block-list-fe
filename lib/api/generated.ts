/**
 * Generated by orval v6.23.0 üç∫
 * Do not edit manually.
 * Block list
 * OpenAPI spec version: 1.0.0
 */
import { createInstance } from "./api-instance";
import type { BodyType } from "./api-instance";
export type BlockListControllerGetBlockListParams = {
  q?: string;
};

export interface BlockListItemCreateDTO {
  data: string;
  type: unknown[];
}

export interface BlockListItemDTO {
  blockListId: number;
  createdAt: string;
  data: string;
  id: number;
  type: unknown[];
}

export interface BlockListDTO {
  id: number;
  items: BlockListItemDTO[];
  ownerId: number;
}

export interface AccountPatchDTO {
  isBlockingEnabled?: boolean;
}

export interface AccountDTO {
  id: number;
  isBlockingEnabled: boolean;
  ownerId: number;
}

export interface SessionDTO {
  email: string;
  exp: number;
  iat: number;
  id: number;
}

export interface SignInPayloadDTO {
  email: string;
  password: string;
}

export interface SignUpPayloadDTO {
  email: string;
  password: string;
}

// eslint-disable-next-line
type SecondParameter<T extends (...args: any) => any> = T extends (
  config: any,
  args: infer P,
) => any
  ? P
  : never;

export const appControllerGetHello = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<void>({ url: `/`, method: "GET" }, options);
};

export const authControllerSignUp = (
  signUpPayloadDTO: BodyType<SignUpPayloadDTO>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<void>(
    {
      url: `/auth/sign-up`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: signUpPayloadDTO,
    },
    options,
  );
};

export const authControllerSignIn = (
  signInPayloadDTO: BodyType<SignInPayloadDTO>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<void>(
    {
      url: `/auth/sign-in`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: signInPayloadDTO,
    },
    options,
  );
};

export const authControllerSignOut = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<void>(
    { url: `/auth/sign-out`, method: "POST" },
    options,
  );
};

export const authControllerGetSession = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<SessionDTO>(
    { url: `/auth/session`, method: "GET" },
    options,
  );
};

export const accountControllerGetAccount = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<AccountDTO>(
    { url: `/account`, method: "GET" },
    options,
  );
};

export const accountControllerPatchAccount = (
  accountPatchDTO: BodyType<AccountPatchDTO>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<AccountDTO>(
    {
      url: `/account`,
      method: "PATCH",
      headers: { "Content-Type": "application/json" },
      data: accountPatchDTO,
    },
    options,
  );
};

export const blockListControllerGetBlockList = (
  params?: BlockListControllerGetBlockListParams,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<BlockListDTO>(
    { url: `/block-list`, method: "GET", params },
    options,
  );
};

export const blockListControllerCreateBlockListItem = (
  blockListItemCreateDTO: BodyType<BlockListItemCreateDTO>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<BlockListDTO>(
    {
      url: `/block-list`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: blockListItemCreateDTO,
    },
    options,
  );
};

export const blockListControllerRemoveBlockListItem = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<void>(
    { url: `/block-list`, method: "DELETE" },
    options,
  );
};

export type AppControllerGetHelloResult = NonNullable<
  Awaited<ReturnType<typeof appControllerGetHello>>
>;
export type AuthControllerSignUpResult = NonNullable<
  Awaited<ReturnType<typeof authControllerSignUp>>
>;
export type AuthControllerSignInResult = NonNullable<
  Awaited<ReturnType<typeof authControllerSignIn>>
>;
export type AuthControllerSignOutResult = NonNullable<
  Awaited<ReturnType<typeof authControllerSignOut>>
>;
export type AuthControllerGetSessionResult = NonNullable<
  Awaited<ReturnType<typeof authControllerGetSession>>
>;
export type AccountControllerGetAccountResult = NonNullable<
  Awaited<ReturnType<typeof accountControllerGetAccount>>
>;
export type AccountControllerPatchAccountResult = NonNullable<
  Awaited<ReturnType<typeof accountControllerPatchAccount>>
>;
export type BlockListControllerGetBlockListResult = NonNullable<
  Awaited<ReturnType<typeof blockListControllerGetBlockList>>
>;
export type BlockListControllerCreateBlockListItemResult = NonNullable<
  Awaited<ReturnType<typeof blockListControllerCreateBlockListItem>>
>;
export type BlockListControllerRemoveBlockListItemResult = NonNullable<
  Awaited<ReturnType<typeof blockListControllerRemoveBlockListItem>>
>;
